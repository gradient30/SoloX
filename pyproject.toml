[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "solox"
dynamic = ["version"]
description = "SoloX - Real-time collection tool for Android/iOS performance data."
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "SoloX Team", email = "rafacheninc@gmail.com"}
]
maintainers = [
    {name = "SoloX Team", email = "rafacheninc@gmail.com"}
]
keywords = [
    "android", "ios", "performance", "monitoring", "apm", "testing", 
    "mobile", "automation", "cpu", "memory", "fps", "battery"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Monitoring",
    "Topic :: Utilities"
]
requires-python = ">=3.10"
dependencies = [
    # Web 框架 (兼容版本组合)
    "Flask==2.0.3",
    "Werkzeug==2.0.3",
    "Jinja2==3.0.1",
    
    # WebSocket 支持 (兼容版本组合)
    "Flask-SocketIO==4.3.1",
    "python-socketio==4.6.0",
    "python-engineio==3.13.2",
    
    # 核心依赖
    "fire",
    "logzero",
    "pyfiglet",
    "psutil",
    
    # 设备通信
    "tidevice==0.9.7",
    
    # 图像处理
    "opencv-python",
    
    # HTTP 客户端
    "requests>=2.28.2",
    
    # 数据处理
    "tqdm",
    "xlwt",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.900",
    "isort>=5.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-mock>=3.0",
    "requests-mock>=1.9",
]

[project.urls]
Homepage = "https://github.com/smart-test-ti/SoloX"
Documentation = "https://github.com/smart-test-ti/SoloX/blob/main/README.md"
Repository = "https://github.com/smart-test-ti/SoloX.git"
Issues = "https://github.com/smart-test-ti/SoloX/issues"
Changelog = "https://github.com/smart-test-ti/SoloX/releases"

[project.scripts]
solox = "solox.__main__:main"

[tool.setuptools]
packages = ["solox"]
include-package-data = true

[tool.setuptools.package-data]
solox = ["templates/*", "static/**/*", "public/scrcpy/*"]

[tool.setuptools_scm]
write_to = "solox/_version.py"

# Black 代码格式化配置
[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort 导入排序配置
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["solox"]

# MyPy 类型检查配置
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "tidevice.*",
    "fire.*",
    "pyfiglet.*",
    "logzero.*",
]
ignore_missing_imports = true

# Pytest 配置
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage 配置
[tool.coverage.run]
source = ["solox"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "solox/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
